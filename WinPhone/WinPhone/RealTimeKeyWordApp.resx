<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="NaverLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
  <data name="Back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gYEECcz7kkC3QAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAACQSURBVDhP
        tdPBCYMwFMbxRzuA7VG6gzOIDtcRetJTF+mxrXpwBwtOYf8vEJDQQ15CP/gdEvhCNIn8KwWuqNzIGC0/
        seGjE5ac8IKWVYfoaPkNX77jiKicMSC5PMKXZ7SoI1wgD/iy1Yr8BcJPmNDg15ZDJVzCn9jjAFPCY0xe
        ZH+RbjBnf5UXnUhJ1mMyROQLxglHpe9JubUAAAAASUVORK5CYII=
</value>
  </data>
</root>